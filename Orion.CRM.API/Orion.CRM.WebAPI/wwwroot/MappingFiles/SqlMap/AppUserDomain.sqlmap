<?xml version="1.0" encoding="utf-8" ?>
<SqlMap>
  <SqlMapConfigurations>

    <SqlMapDetail>
      <SqlName>GetUsers</SqlName>
      <OriginalSqlString>
        <![CDATA[
        select top $PageSize * 
          from
          (
            select ROW_NUMBER() OVER (ORDER BY id) as RowNumber,* from 
		        (
			        select A.*,B.OrgName from [AppUser] A inner join Organization B on A.OrgId=B.Id
		        )as temp
          )as A 
        where RowNumber > $PageSize*($PageIndex-1)
        ]]>
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>分页获取用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUserCount</SqlName>
      <OriginalSqlString>
        select count(1) from AppUser
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>获取用户总数</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUsersByOrgId</SqlName>
      <OriginalSqlString>
        <![CDATA[
          select top $PageSize * from(
              select ROW_NUMBER() OVER (ORDER BY id) as RowNumber,* from (
			          select A.*,B.OrgName,C.RoleId,D.ProjectId,H.GroupId,E.RoleName,F.ProjectName,I.GroupName from [AppUser] A 
			          left join [Organization] B on A.OrgId=B.Id
			          left join [UserRole] C on A.Id=C.UserId
			          left join [UserProject] D on A.Id=D.UserId
			          left join [Role] E on C.RoleId=E.Id
			          left join [Project] F on D.ProjectId=F.Id
			          left join [UserGroup] H on A.Id=H.UserId
			          left join [Group] I on H.GroupId=I.Id
		          )as temp
            )as t
          where RowNumber > $PageSize*($PageIndex-1) and OrgId=@OrgId
        ]]>
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>分页获取指定组织机构下的用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUserCountByOrgId</SqlName>
      <OriginalSqlString>
        select count(1) from AppUser where OrgId=@OrgId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>获取指定组织机构下的用户数</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUsersByCondition</SqlName>
      <OriginalSqlString>
        <![CDATA[
          select top $PageSize * from(
              select ROW_NUMBER() OVER (ORDER BY id) as RowNumber,* from (
			          select A.*,B.OrgName,C.RoleId,D.ProjectId,H.GroupId,E.RoleName,F.ProjectName,I.GroupName from [AppUser] A 
			          left join [Organization] B on A.OrgId=B.Id
			          left join [UserRole] C on A.Id=C.UserId
			          left join [UserProject] D on A.Id=D.UserId
			          left join [Role] E on C.RoleId=E.Id
			          left join [Project] F on D.ProjectId=F.Id
			          left join [UserGroup] H on A.Id=H.UserId
			          left join [Group] I on H.GroupId=I.Id
		          )as temp
            )as t
          where RowNumber > $PageSize*($PageIndex-1) and OrgId=@OrgId $SqlWhere
        ]]>
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>根据查询条件，分页获取用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUserCountByCondition</SqlName>
      <OriginalSqlString>
        select count(1) from [AppUser] A
        left join [Organization] B on A.OrgId=B.Id
        left join [UserRole] C on A.Id=C.UserId
        left join [UserProject] D on A.Id=D.UserId
        left join [Role] E on C.RoleId=E.Id
        left join [Project] F on D.ProjectId=F.Id
        left join [UserGroup] H on A.Id=H.UserId
        left join [Group] I on H.GroupId=I.Id
        where A.OrgId=1 $SqlWhere
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>获取查询条件下的用户数</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetAllUsersByGroupId</SqlName>
      <OriginalSqlString>
        select A.*,B.OrgName,C.RoleId,D.ProjectId,H.GroupId,E.RoleName,F.ProjectName,I.GroupName from [AppUser] A
        left join [Organization] B on A.OrgId=B.Id
        left join [UserRole] C on A.Id=C.UserId
        left join [UserProject] D on A.Id=D.UserId
        left join [Role] E on C.RoleId=E.Id
        left join [Project] F on D.ProjectId=F.Id
        left join [UserGroup] H on A.Id=H.UserId
        left join [Group] I on H.GroupId=I.Id
        where GroupId=@GroupId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>获取指定业务组下的所有用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetAllUsersByProjectId</SqlName>
      <OriginalSqlString>
        select A.Id,A.UserName,A.RealName,B.ProjectId from [AppUser] A
        inner join [UserProject] B on A.Id=B.UserId
        where B.ProjectId=@ProjectId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>获取项目下的所有业务员</Description>
    </SqlMapDetail>
    
    <SqlMapDetail>
      <SqlName>GetUserById</SqlName>
      <OriginalSqlString>
        select A.*,B.ProjectId,C.GroupId,D.RoleId,F.RoleName,E.GroupName from [AppUser] A
        left join [UserProject] B on A.Id=B.UserId
        left join [UserGroup] C on A.Id=C.UserId
        left join [UserRole] D on A.Id=D.UserId
        left join [Group] E on C.GroupId=E.Id
        left join [Role] F on D.RoleId=F.Id
        where A.Id=@Id
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>根据Id获取用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUserByUserName</SqlName>
      <OriginalSqlString>
        select A.*,B.ProjectId,C.GroupId,D.RoleId,E.GroupName from [AppUser] A
        left join UserProject B on A.Id=B.UserId
        left join UserGroup C on A.Id=C.UserId
        left join UserRole D on A.Id=D.UserId
        left join [Group] E on C.GroupId=E.Id
        where A.UserName=@UserName
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>根据UserName获取用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUserByEmail</SqlName>
      <OriginalSqlString>
        select * from [AppUser] A where Email=@Email
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>根据Email获取用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>InsertUser</SqlName>
      <OriginalSqlString>
        insert into AppUser(OrgId,UserName,Password,RealName,CreateTime,UpdateTime,Mobile,Email,Wechat,Enable)
        values(@OrgId,@UserName,@Password,@RealName,@CreateTime,@UpdateTime,@Mobile,@Email,@Wechat,@Enable);select cast(@@identity as int);
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>新增用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>UpdateUser</SqlName>
      <OriginalSqlString>
        update AppUser set OrgId=@OrgId,RealName=@RealName,UpdateTime=@UpdateTime,Mobile=@Mobile,Email=@Email,Wechat=@Wechat,Enable=@Enable where Id=@Id
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>修改用户</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>UpdatePassword</SqlName>
      <OriginalSqlString>
        update AppUser set Password=@Password,UpdateTime=@UpdateTime where Id=@Id
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>修改用户密码</Description>
    </SqlMapDetail>
    
    <SqlMapDetail>
      <SqlName>GetUserRole</SqlName>
      <OriginalSqlString>
        
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>获取用户和角色之间的关系</Description>
    </SqlMapDetail>
    <SqlMapDetail>
      <SqlName>InsertUserRole</SqlName>
      <OriginalSqlString>
        insert into UserRole(UserId,RoleId,CreateTime) values(@UserId,@RoleId,@CreateTime);select cast(@@identity as int);
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>插入用户和角色之间的关系</Description>
    </SqlMapDetail>
    <SqlMapDetail>
      <SqlName>UpdateUserRole</SqlName>
      <OriginalSqlString>
        update UserRole set RoleId=@RoleId where UserId=@UserId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>修改用户和角色之间的关系</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUserProject</SqlName>
      <OriginalSqlString>
        select * from UserProject where UserId=@UserId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>获取用户和项目之间的关系</Description>
    </SqlMapDetail>
    <SqlMapDetail>
      <SqlName>InsertUserProject</SqlName>
      <OriginalSqlString>
        insert into UserProject(UserId,ProjectId,CreateTime) values(@UserId,@ProjectId,@CreateTime);select cast(@@identity as int);
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>插入用户和项目之间的关系</Description>
    </SqlMapDetail>
    <SqlMapDetail>
      <SqlName>UpdateUserProject</SqlName>
      <OriginalSqlString>
        update UserProject set ProjectId=@ProjectId where UserId=@UserId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>修改用户和项目之间的关系</Description>
    </SqlMapDetail>
    <SqlMapDetail>
      <SqlName>DeleteUserProject</SqlName>
      <OriginalSqlString>
        delete from UserProject where UserId=@UserId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>删除用户和项目之间的关系</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>DeleteUserProjectByProjectId</SqlName>
      <OriginalSqlString>
        delete from UserProject where ProjectId=@ProjectId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>删除某一项目和用户的关系</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>GetUserGroup</SqlName>
      <OriginalSqlString>
        select * from UserGroup where UserId=@UserId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>获取用户和项目之间的关系</Description>
    </SqlMapDetail>
    <SqlMapDetail>
      <SqlName>InsertUserGroup</SqlName>
      <OriginalSqlString>
        insert into UserGroup(UserId,GroupId,CreateTime) values(@UserId,@GroupId,@CreateTime);select cast(@@identity as int);
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>插入用户和业务组之间的关系</Description>
    </SqlMapDetail>
    <SqlMapDetail>
      <SqlName>UpdateUserGroup</SqlName>
      <OriginalSqlString>
        update UserGroup set GroupId=@GroupId where UserId=@UserId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>修改用户和业务组之间的关系</Description>
    </SqlMapDetail>
    <SqlMapDetail>
      <SqlName>DeleteUserGroup</SqlName>
      <OriginalSqlString>
        delete from UserGroup where UserId=@UserId
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>删除用户和业务组之间的关系</Description>
    </SqlMapDetail>

    <SqlMapDetail>
      <SqlName>DeleteUser</SqlName>
      <OriginalSqlString>
        update [Group] set ManagerId=null where ManagerId=@UserId;
        delete from [ResourceUser] where UserId=@UserId;
        delete from [TalkRecord] where UserId=@UserId;
        delete from [ResourceTag] where TagId in(select Id from [Tag] where UserId=@UserId);
        delete from [Tag] where UserId=@UserId;
        delete from [ResourceNote] where UserId=@UserId;
        delete from [UserGroup] where UserId=@UserId;
        delete from [UserProject] where UserId=@UserId;
        delete from [UserRole] where UserId=@UserId;
        delete from [AppUser] where Id=@UserId;
      </OriginalSqlString>
      <DBConnectionName>OrionCRM</DBConnectionName>
      <CommandType>Text</CommandType>
      <Description>删除用户及相关数据(物理删除)</Description>
    </SqlMapDetail>
  
	</SqlMapConfigurations>
</SqlMap>
