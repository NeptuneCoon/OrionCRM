@model Orion.CRM.WebApp.Models.Performance.GroupSaleViewModel
@{
    ViewData["Title"] = "Group";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section styles{
    <link href="~/assets/morris.chart/0.5.1/morris.css" rel="stylesheet" />
    <link href="~/assets/pikaday/pikaday.css" rel="stylesheet" />
    <style type="text/css">
        .filter {
            height: 30px;
            line-height: 30px;
            display: flex;
            padding-left: 20px;
            margin-top: 20px;
            margin-bottom:20px;
        }

        .select {
            padding: 3px 5px;
            border-radius: 2px;
            min-width: 100px;
            color: #555;
        }
        .date {
            position: absolute;
            left: 0px;
            width: 100px;
            padding: 4px 4px;
            color: #555;
        }
        .start {
            border: 1px solid #ccc;
            border-top-left-radius: 2px !important;
            border-bottom-left-radius: 2px !important;
            border-top-right-radius: 0px !important;
            border-bottom-right-radius: 0px !important;
        }
        .end {
            border-top-right-radius: 2px !important;
            border-bottom-right-radius: 2px !important;
            border-top-left-radius: 0px !important;
            border-bottom-left-radius: 0px !important;
            border-left: 0px solid #ccc !important;
        }

        .icon-position {
            position: absolute;
            right: 0px;
            top: 6px;
            cursor: pointer
        }
    </style>
}
@section scripts{
    <script src="~/assets/morris.chart/0.5.1/raphael-min.js"></script>
    <script src="~/assets/morris.chart/0.5.1/morris.min.js"></script>
    <script src="~/assets/pikaday/pikaday.js"></script>
    <script>
        $(function () {
            // 日历控件初始化
            var picker_start_member = new Pikaday({
                field: document.getElementById('startDate_member'),
                format: 'YYYY-M-D',
                minDate: new Date(2016, 0, 1),
                maxDate: new Date(),
                i18n: {
                    previousMonth: '上一月',
                    nextMonth: '下一月',
                    months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
                    weekdays: ['日', '一', '二', '三', '四', '五', '六'],
                    weekdaysShort: ['日', '一', '二', '三', '四', '五', '六']
                },
                showMonthAfterYear: true,
                theme: 'triangle-theme',
                yearSuffix: '年',
                onSelect: function (selectedDate) {
                    var endDate = $('#endDate_member').val();
                    if(!endDate){
                        picker_end_member.show();
                    }
                }
            });
            var picker_end_member = new Pikaday({
                field: document.getElementById('endDate_member'),
                format: 'YYYY-M-D',
                minDate: new Date(2016, 0, 1),
                maxDate: new Date(),
                i18n: {
                    previousMonth: '上一月',
                    nextMonth: '下一月',
                    months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
                    weekdays: ['日', '一', '二', '三', '四', '五', '六'],
                    weekdaysShort: ['日', '一', '二', '三', '四', '五', '六']
                },
                showMonthAfterYear: true,
                theme: 'triangle-theme',
                yearSuffix: '年'
            });

            var picker_start_trend = new Pikaday({
                field: document.getElementById('startDate_trend'),
                format: 'YYYY-M-D',
                minDate: new Date(2016, 0, 1),
                maxDate: moment().toDate(),
                i18n: {
                    previousMonth: '上一月',
                    nextMonth: '下一月',
                    months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
                    weekdays: ['日', '一', '二', '三', '四', '五', '六'],
                    weekdaysShort: ['日', '一', '二', '三', '四', '五', '六']
                },
                showMonthAfterYear: true,
                theme: 'triangle-theme',
                yearSuffix: '年',
                onSelect: function (selectedDate) {
                    var endDate = $('#endDate_trend').val();
                    if(!endDate){
                        picker_end_trend.show();
                    }
                }
            });
            var picker_end_trend = new Pikaday({
                field: document.getElementById('endDate_trend'),
                format: 'YYYY-M-D',
                minDate: new Date(2016, 0, 1),
                maxDate: new Date(),
                i18n: {
                    previousMonth: '上一月',
                    nextMonth: '下一月',
                    months: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],
                    weekdays: ['日', '一', '二', '三', '四', '五', '六'],
                    weekdaysShort: ['日', '一', '二', '三', '四', '五', '六']
                },
                showMonthAfterYear: true,
                theme: 'triangle-theme',
                yearSuffix: '年'
            });

            // 日期文本框中icon的click事件
            $("i[class='icon-calendar icon-position']").click(function () {
                $(this).parent().find("input").click();
            });

            // 初始化第一个图表
            var initMemberChart = function () {
                /* 数据格式化 */
                var dataFormat = function (jsonArr) {
                    var arr = [];
                    if (jsonArr) {
                        for (var i = 0; i < jsonArr.length; i++) {
                            var item = jsonArr[i];
                            arr.push({ label: item.SignMan, value: item.Amount });
                        }
                    }
                    return arr;
                };

                var memberJsonString = $('#hidMemberData').val();
                var member_data = [];
                if (memberJsonString) {
                    var jsonArr = JSON.parse(memberJsonString);
                    member_data = dataFormat(jsonArr);
                }

                // 成员业绩图(柱形图)
                if (member_data.length > 0) {
                    Morris.Bar({
                        element: 'members-chart',
                        data: member_data,
                        xkey: 'label',
                        ykeys: ['value'],
                        labels: ['业绩'],
                        barRatio: 0.4,
                        xLabelAngle: 35,
                        hideHover: 'auto'
                    });
                }
            };

            initMemberChart();

            // 初始化第2个图表
            var initProjectGroupChart = function () {
                var trendData = $('#hidTrendData').val();
                if (trendData) {
                    var json = JSON.parse(trendData);
                    Morris.Line({
                        element: 'trend-chart',
                        data: json.data,
                        xkey: 'period',
                        ykeys: json.groups.split(','),
                        labels: json.groups.split(',')
                    });
                }
            };
            initProjectGroupChart();
        });

        function memberProjectChange(e) {
            var projectId = $(e).find("option:selected").val();
            $.get("/Group/GetGroupsByProjectId", { "projectId": projectId }, function (data) {
                var group_select = $(e).parents(".filter").find("select").last();
                $(group_select).find("option").remove();

                if (data && data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        var group = data[i];
                        var option = '<option value="' + group.id + '">' + group.groupName + '</option>';
                        $(group_select).append(option);
                    }
                }
                else {
                    $(group_select).append('<option>没有业务组</option>');
                }

                //var id = $(e).attr("id");
                //if (id == "projectMember"){
                //    renderMemberChart();
                //}
                //else {
                //    renderTrendChart();
                //}
            });
        }
        //function trendProjectChange(e) {
        //    var projectId = $(e).find("option:selected").val();
        //    $.get("/Group/GetGroupsByProjectId", { "projectId": projectId }, function (data) {
        //        var group_select = $(e).parents(".filter").find("select").last();
        //        $(group_select).find("option").remove();

        //        if (data && data.length > 0) {
        //            for (var i = 0; i < data.length; i++) {
        //                var group = data[i];
        //                var option = '<option value="' + group.id + '">' + group.groupName + '</option>';
        //                $(group_select).append(option);
        //            }
        //        }

        //        renderTrendChart();                
        //    });
        //}

        function renderMemberChart() {
            $('#members-chart').html('');
            var groupId = $("#member_group").val();
            var startDate = $('#startDate_member').val() + " 00:00:00";
            var endDate = $('#endDate_member').val() + " 23:59:59";
            if (groupId > 0 && $('#startDate_member').val() && $('#endDate_member').val()) {
                $.get("/Performance/GetGroupMemberSignRecords", { "groupId": groupId, "startDate": startDate, "endDate": endDate }, function (data) {
                    if (data && data.length > 0) {
                        var chart_data = [];
                        for (var i = 0; i < data.length; i++) {
                            var item = data[i];
                            chart_data.push({ label: item.signMan, value: item.amount });
                        }

                        Morris.Bar({
                            element: 'members-chart',
                            data: chart_data,
                            xkey: 'label',
                            ykeys: ['value'],
                            labels: ['业绩'],
                            barRatio: 0.4,
                            xLabelAngle: 35,
                            hideHover: 'auto'
                        });
                    }
                });
            }
            else {
                $('#members-chart').html('');
            }
        }

        function renderTrendChart() {
            // 折线图
            var projectId = $("#projectTrend").val();
            var startDate = $('#startDate_trend').val();
            var endDate = $('#endDate_trend').val();

            var result = true;
            if (!startDate) {
                alert('请选择起始时间！');
                result = false;
            }
            else if (!endDate) {
                alert('请选择截止时间！');
                result = false;
            }

            if (result) {
                $('#trend-chart').html('');
                $.get("/Performance/GetProjectGroupSignRecords?projectId=" + projectId + "&startDate=" + startDate + "&endDate=" + endDate, null, function (data) {
                    if (data) {
                        var json = JSON.parse(data);
                        if (json.data) {
                            Morris.Line({
                                element: 'trend-chart',
                                data: json.data,
                                xkey: 'period',
                                ykeys: json.groups.split(','),
                                labels: json.groups.split(',')
                            });
                        }
                    }
                });
            }
        }
    </script>
}

<h3>组业绩分析</h3>
<div class="row">
    <div style="width:740px">
        <div class="graph-container">
            <span class="graph-mark">组成员业绩</span>
            <div class="filter">
                <select class="select" style="width:120px" id="projectMember" onchange="memberProjectChange(this)">
                    @if (Model.ProjectList != null) {
                        foreach (var project in Model.ProjectList) {
                            <option value="@project.Id">@project.ProjectName</option>
                        }
                    }
                    else {
                        <option>没有项目</option>
                    }
                </select>

                <select class="select" style="width:120px;margin-left:10px" id="member_group" onchange="renderMemberChart()">
                    @if (Model.GroupList != null && Model.GroupList.Count > 0) {
                        foreach (var group in Model.GroupList) {
                            <option value="@group.Id">@group.GroupName</option>
                        }
                    }
                    else {
                        <option>没有业务组</option>
                    }
                </select>

                <div style="position:relative;width:110px;margin-left:10px">
                    <input type="text" id="startDate_member" class="date start" value="@Model.StartDateMember" onblur="renderMemberChart()" />
                    <i class="icon-calendar icon-position"></i>
                </div>

                <span style="border:1px solid #ccc;padding:0px 6px;display:block">至</span>
                <div style="position:relative;width:110px">
                    <input type="text" id="endDate_member" class="date end" value="@Model.EndDateMember" onblur="renderMemberChart()" />
                    <i class="icon-calendar icon-position"></i>
                </div>
            </div>

            <div id="members-chart" class="graph" style="position:relative"></div>
            <div class="caption" style="margin-top:10px">指定时间范围内的业务人员业绩</div>
        </div>
    </div>
</div>

<div class="row">
    <div style="width:740px">
        <div class="graph-container">
            <span class="graph-mark">变化趋势</span>
            <div class="filter">
                <select class="select" style="width:120px" id="projectTrend" onchange="renderTrendChart()">
                    @if (Model.ProjectList != null) {
                        foreach (var project in Model.ProjectList) {
                            <option value="@project.Id">@project.ProjectName</option>
                        }
                    }
                    else {
                        <option>没有项目</option>
                    }
                </select>
                <div style="position:relative;width:110px;margin-left:10px">
                    <input type="text" id="startDate_trend" class="date start" value="@Model.StartDateTrend" onblur="renderTrendChart()" />
                    <i class="icon-calendar icon-position"></i>
                </div>

                <span style="border:1px solid #ccc;padding:0px 6px;display:block">至</span>
                <div style="position:relative;width:110px">
                    <input type="text" id="endDate_trend" class="date end" value="@Model.EndDateTrend" onblur="renderTrendChart()" />
                    <i class="icon-calendar icon-position"></i>
                </div>
            </div>
            <div id="trend-chart" class="graph" style="position:relative"></div>
            <div class="caption" style="margin-top:10px">以月为单位的组业绩变化趋势</div>
        </div>
    </div>
</div>
<input type="hidden" id="hidMemberData" value="@Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.MemberSignRecords)" />
<input type="hidden" id="hidTrendData" value="@ViewBag.ProjectGroupSignRecords" />



